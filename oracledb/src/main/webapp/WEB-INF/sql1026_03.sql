select nvl(manager_id,0)
from employees
;

-- ceo라는 글자로 표시해서 출력하시오.
-- 숫자를 문자로 형변환후 CEO글자 출력
select nvl(to_char(manager_id),'CEO')
from employees
;

-- 그룹함수 --
-- 게시글 조회수 총합을 출력하시오.
-- 천단위 표시
SELECT TRIM(TO_CHAR(SUM(BHIT),'999,999,999')) FROM BOARD;

-- 평균 표시
SELECT TRIM(TO_CHAR(AVG(BHIT),'999,999,999')) FROM BOARD;

-- 월급의 평균 출력, 소수점 2자리까지 반올림
SELECT ROUND(AVG(SALARY),2) FROM EMPLOYEES;

-- EMP_NAME 단일함수를 그룹함수와 함께 출력이 안됨. 
SELECT EMP_NAME,AVG(SALARY) FROM EMPLOYEES;

-- MIN 최소값 ,MAX 최대값, AVG 평균, COUNT 개수, SUM 합계
SELECT MIN(SALARY),MAX(SALARY),AVG(SALARY),COUNT(*) FROM EMPLOYEES;

-- 부서번호가 50 인 사원들의 SALARY 합계,평균을 출력하시오.
SELECT SUM(SALARY),AVG(SALARY)
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 50
;

SELECT DEPARTMENT_ID,SUM(SALARY),AVG(SALARY),COUNT(*)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
ORDER BY DEPARTMENT_ID ASC
;

-- 퀴즈
-- 날짜 게시글 개수를 출력하시오.
SELECT BDATE,COUNT(*)
FROM BOARD
GROUP BY BDATE
ORDER BY BDATE ASC
;

-- 년도의 월별 개수를 출력하시오.
SELECT TO_CHAR(BDATE,'YYYYMM') 년월,COUNT(TO_CHAR(BDATE,'YYYYMM') ) 년월별개수
FROM BOARD
GROUP BY TO_CHAR(BDATE,'YYYYMM')
ORDER BY TO_CHAR(BDATE,'YYYYMM')
;

SELECT ADD_MONTHS(BDATE,1) 
FROM BOARD
;

-- 년도만 출력
SELECT EXTRACT(YEAR FROM BDATE) FROM BOARD;
-- 월만 출력
SELECT EXTRACT(MONTH FROM BDATE) FROM BOARD;
-- 일만 출력
SELECT EXTRACT(DAY FROM BDATE) FROM BOARD;

-- 년도와 상관없이 월별 게시글수 출력
SELECT EXTRACT(MONTH FROM BDATE),COUNT(EXTRACT(MONTH FROM BDATE))
FROM BOARD
GROUP BY EXTRACT(MONTH FROM BDATE)
ORDER BY EXTRACT(MONTH FROM BDATE)
;

-- 단일함수 사용은 GROUP BY 절에 추가해서 사용해야 함.
SELECT DEPARTMENT_ID,COUNT(*) FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
ORDER BY DEPARTMENT_ID
;
SELECT COUNT(EMPLOYEE_ID) FROM EMPLOYEES; --107
SELECT COUNT(MANAGER_ID) FROM EMPLOYEES; --106 : NULL


-- 조회수가 가장 낮은 제목,내용을 출력하시오.
SELECT MIN(BHIT) FROM BOARD;
SELECT BNO, BTITLE, MIN(BHIT) FROM BOARD
GROUP BY BNO,BTITLE,BCONTENT
;

SELECT * FROM BOARD
WHERE BHIT = (SELECT MIN(BHIT) FROM BOARD)
;

-- 조회수가 가장 높은 게시글을 출력하시오.
SELECT * FROM BOARD
WHERE BHIT = (SELECT MAX(BHIT) FROM BOARD)
;


-- [ 문자함수 ] --
SELECT EMP_NAME FROM EMPLOYEES;

-- 대소문자 구분 없이 si 가 포함된 이름을 모두 출력하시오.
-- SI, Si, sI, si
SELECT EMP_NAME
FROM EMPLOYEES
WHERE EMP_NAME LIKE ('%DA%') OR EMP_NAME LIKE ('%Da%') OR EMP_NAME LIKE ('%dA%') OR EMP_NAME LIKE ('%da%')
;

-- 소문자 변환함수
SELECT EMP_NAME
FROM EMPLOYEES
WHERE LOWER(EMP_NAME) LIKE ('%da%')
;
-- 대문자 변환함수
SELECT EMP_NAME
FROM EMPLOYEES
WHERE UPPER(EMP_NAME) LIKE ('%DA%')
;

-- employees에서 이름을 대문자로 출력하시오.
SELECT UPPER(EMP_NAME) FROM EMPLOYEES;

-- 자리수를 만들어서 지정한 문자를 채워 출력.
SELECT LPAD(12345,10,'0') FROM DUAL;
SELECT RPAD(12345,10,'#') FROM DUAL;

-- 12345 10자리로 천단위표시와 원화 표시를 추가해서 출력하시오.
-- 빈공백은 0으로 표시
SELECT TO_CHAR(12345,'L0,000,000,000') FROM DUAL
;

--LTRIM - 왼쪽 공백 제거, RTRIM-오른쪽공백제거, TRIM-모든 공백제거
-- '    ABC DEF   C    '
SELECT TRIM('   ABC DEF   C    ') FROM DUAL;


SELECT * FROM EMPLOYEES;

-- JOB_ID ASST -> SS -> I  ASST ->AIT
SELECT JOB_ID,REPLACE(JOB_ID,'SS','I') FROM EMPLOYEES;

-- JOB_ID 안에 있는 공백 제거
SELECT EMP_NAME, REPLACE(EMP_NAME,' ','') FROM EMPLOYEES;
SELECT '   ABC DEF   C    ',REPLACE('   ABC DEF   C    ',' ','') FROM DUAL;


SELECT JOB_ID FROM EMP2;
-- SH_CLERK -> CLERK 변경해서 저장하시오.
UPDATE EMP2
SET JOB_ID = 'CLERK'
WHERE JOB_ID = 'SH_CLERK'
;

rollback;

-- SH_CLERK을 CLERK으로 업데이트 
update emp2 a
set job_id = (SELECT REPLACE(JOB_ID,'CL','SH_CLERK') j_id from emp2 b where a.employee_id = b.employee_id)
;


SELECT REPLACE(JOB_ID,'SH_CLERK','CLERK') FROM EMP2;


ROLLBACK;

-- SUBSTR(해당컬럼,3,2 ) 해당컬럼에서 3번째 글자부터 2개를 짤라와 출력
--  4번째부터 이름 3개를 가져옴.
SELECT EMP_NAME,SUBSTR(EMP_NAME,1,5) FROM EMPLOYEES;

SELECT HIRE_DATE FROM EMPLOYEES;

-- 이름 5개와 입사년도 출력 
-- Donal(1995)
SELECT SUBSTR(EMP_NAME,1,5)||'('||EXTRACT(YEAR FROM HIRE_DATE)||')'
FROM EMPLOYEES
;
-- 
SELECT * FROM EMPLOYEES;

-- 입사일이 06월 사람중에 이름이 d가 들어가 있는 사원을 출력하시오.
SELECT * FROM EMPLOYEES
WHERE EXTRACT(MONTH FROM HIRE_DATE) = 6
AND EMP_NAME LIKE ('%d%')
;


rollback;
select job_id from emp2;


update board
set bhit =1
;

select bhit from board;

rollback;

select bno,bhit,bhit+100 from board;


select job_id from emp2;

update emp2 a
set job_id = (select replace(job_id,'SH_CLERK','CLERK') from emp2 b where a.employee_id = b.employee_id)
;

commit;

select * from board;

-- 게시글의 날짜를 1씩증가해서 update하시오.
-- bdate

update board a
set bdate = (select bdate+1 from board b where a.bno = b.bno)
;

rollback;


select * from stuscore;

update stuscore
set rank = 0
;

commit;

select * from stuscore;

select b_num, b_rank from
(select stunum b_num,rank() over (order by total desc) b_rank from stuscore)
;

update stuscore a
set rank = (select b_rank from
(select stunum b_num,rank() over (order by total desc) b_rank from stuscore b) where a.stunum = b_num  )
;


select length(emp_name),emp_name from employees
;

-- length 평균 출력
select avg(length(emp_name)) from employees;

-- 이름을 평균절사 길이만큼만 출력하시오.


-- employees  폰번호 5번째 3개와 이름 1,5번째까지 2개를 함께 출력하시오.
select * from employees;
select substr(phone_number,5,3)||substr(emp_name,1,5) from employees;


-- instr 찾고자 하는 위치 숫자출력
select instr(emp_name,'o') from
employees
where employee_id=198
;

select emp_name, instr(emp_name,' '), instr(emp_name,' ')+1 from employees;

-- 1번째 공백이후부터 이름가져오기
select substr(emp_name,instr(emp_name,' ')+1) from employees;

-- 주민번호 앞에 자리 가져오기
select substr('880101-1101111',1,instr('880101-1101111','-')-1) from dual;

-- 주민번호 뒤에 자리 가져오기
select substr('880101-1101111',instr('880101-1101111','-')+1) from dual;

-- employees의 phone_number 첫번째 점 기준으로 앞부분과 뒤부분 출력하시오.
select phone_number from employees;

select instr('123.456.789','.') from dual; -- 점이 있는 위치값

select instr('123.456.789.000','.',1,3) from dual; -- 첫번째 숫자-시작위치, 두번째 숫자 점의 두번째 위치값

select instr('123.456.789.000','.',-1,1) from dual; -- 첫번째 숫자-시작위치, 두번째 숫자 점의 두번째 위치값

select * from member;

-- 전화번호 - 첫번째 값 출력, 두번째 ,세번째 값을 출력하시오.\
-- 010
-- 1111
-- 1111
select substr(phone,1,instr(phone,'-')-1) from member; -- 1번째
select substr(phone, instr(phone,'-')+1, 4 ) from member; -- 2번째
select substr(phone, instr(phone,'-',1,2)+1, 4 ) from member; -- 3번째


select phone_number from employees;
-- 폰번호에서 123포함되어 있는 폰번호를 출력하시오.
select phone_number from employees
where phone_number like ('%123%')
;


-- 부서별 최대월급을 출력하시오.

select department_id, count(*),max(salary),min(salary)
from employees
group by department_id
order by department_id
;

--이름
select emp_name,hire_date, to_char( hire_date,'YYYY"년"MM"월"DD"일" DAY')
from employees
;


